---
tool_packs:
  - name: palette-agent-mode
    tools:
      - jq
      - zstd
      - rsync
      - iptables
      - rsyslog
      - palette-edge
tools:
  - name: zstd
    version_command: "zstd -V | awk '{print $7}' | sed 's/.$//'"
    minimum_version: "1"
    install_commands:
      ubuntu:
        - apt update
        - apt install -y zstd
      rhel:
        - dnf install -y zstd
  - name: rsync
    version_command: "rsync --version | awk 'NR==1{print $3}'"
    minimum_version: "3"
    install_commands:
      ubuntu:
        - apt update
        - apt install -y rsync
      rhel:
        - dnf install -y rsync
  - name: iptables
    version_command: "iptables --version | grep -oP '\d+\.\d+\.\d+'"
    minimum_version: 1
    install_commands:
      ubuntu:
        - apt update
        - apt insatll -y iptables
      rhel:
        - dnf install iptables iptables-services -y
        - systemctl enable --now iptables
        - systemctl disable --now firewalld
        - systemctl enable iptables
  - name: rsyslog
    version_command: "rsyslogd -v | grep -oP '\d+\.\d+\.\d+'"
    minimum_version: 8
    install_commands:
      ubuntu:
        - apt update
        - apt install -y rsyslog
      rhel:
        - dnf install -y rsyslog
      all:
        - systemctl enable --now rsyslog
  - name: pip
    version_command: "pip --version | awk '{print $2}'"
    minimum_version: "22"
    install_commands:
      ubuntu:
        - apt update
        - apt install -y python3-pip
      rhel:
        - dnf install -y python3-pip
  - name: unzip
    minimum_version: "6"
    version_command: "unzip -v | head -n 1 | awk '{print $2}'"
    install_commands:
      ubuntu:
        - apt update
        - apt install -y unzip
      rhel:
        - dnf install -y unzip
  - name: vim
    version_command: "vim --version | grep 'Vi IMproved' | awk '{print $5}'"
    minimum_version: "8"
    install_commands:
      ubuntu:
        - apt update
        - apt install -y vim
      rhel:
        - dnf install -y vim
  - name: docker
    version_command: "docker version | grep -m 2 Version | tail -n1 | awk '{print $2}'"
    minimum_version: "26.0.0"
    install_commands:
      ubuntu:
        - for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do apt-get remove $pkg >/dev/null 2>&1; done
        - apt-get update
        - apt-get install -y ca-certificates curl
        - install -m 0755 -d /etc/apt/keyrings
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        - chmod a+r /etc/apt/keyrings/docker.asc
        - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        - apt-get update
        - apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        - systemctl enable docker.service
        - systemctl enable containerd.service
      rhel:
        - yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine podman runc
        - yum install -y yum-utils
        - yum-config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
        - yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        - systemctl start docker
        - systemctl enable docker.service
        - systemctl enable containerd.service
  - name: git
    version_command: "git --version | awk '{print $NF}'"
    minimum_version: "2"
    install_commands:
      ubuntu:
        - apt update
        - apt install -y git
      rhel:
        - dnf install -y git
  - name: jq
    version_command: "jq --version | awk -F- '{print $2}'"
    minimum_version: "1.6"
    install_commands:
      ubuntu:
        - apt update
        - apt install -y jq
      rhel:
        - dnf install -y jq
  - name: python3
    version_command: "python3 --version | awk '{print $2}'"
    minimum_version: "3.8"
    install_commands:
      ubuntu:
        - apt update
        - apt install -y python3
      rhel:
        - dnf install -y python3.12
  - name: kubectl
    version_command: "kubectl version --client=true -o yaml | grep gitVersion | awk '{print $2}' | sed 's/^v\(.*\)/\1/'"
    minimum_version: "1.29"
    install_commands:
      linux:
        - rm -f `which kubectl`
        - curl -LO https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl
        - install -o root -g root -m 0755 ./kubectl /usr/local/bin/kubectl
        - rm -f ./kubectl
  - name: palette-edge
    version_command: "palette-edge --version | grep -oP '\d+\.\d+\.\d+'"
    minimum_version: "4.6.3"
    install_commands:
      linux:
        - curl -LO https://software.spectrocloud.com/stylus/v4.6.3/cli/linux/palette-edge
        - install -o root -g root -m 0755 ./palette-edge /usr/local/bin/palette-edge
        - rm -f ./palette-edge
